#
# Macro file for the initialization phase of "Hadr03.cc"
#
# Sets some default verbose
# and initializes the graphic.
#
/control/verbose 2
/run/verbose 2
#
/run/initialize
#
# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Use this open statement to create a .prim file suitable for
# viewing in DAWN:
#/vis/open DAWNFILE
#
# Use this open statement to create a .heprep file suitable for
# viewing in HepRApp:
#/vis/open HepRepFile
#
# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
# Background color:
/vis/viewer/set/background white
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/targetPoint 0 0 0 mm
#
# Specify zoom value:
/vis/viewer/zoom 1.4
#
# Specify style (surface or wireframe):
/vis/viewer/set/style surface
#
# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m
#
# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
# /vis/modeling/trajectories/create/drawByCharge
# /vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
# /vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)
#
# Draw hits at end of event:
#/vis/scene/add/hits
#
# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma
#
# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
#/vis/filtering/trajectories/particleFilter-0/invert true
#
# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/set e- blue
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
#
# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush

/vis/modeling/trajectories/create/drawByParticleID
/vis/modeling/trajectories/drawByParticleID-0/set e- white
/vis/modeling/trajectories/drawByParticleID-0/set gamma blue
/vis/modeling/trajectories/drawByParticleID-0/set neutron green

/vis/filtering/trajectories/create/particleFilter
/vis/filtering/trajectories/particleFilter-0/add neutron
/vis/filtering/trajectories/particleFilter-0/add e-
/vis/filtering/trajectories/particleFilter-0/add gamma

#/vis/scene/add/axes 0 0 0 10 m

/vis/geometry/set/visibility World 0 false

/control/alias TargetColor "0.5  0.36  0.54  0.5"
/control/alias alpideColor  "1.0  0.80  0.3  0.5"

/vis/geometry/set/colour plate1 0 {TargetColor}
/vis/geometry/set/colour plate2 0 {TargetColor}
/vis/geometry/set/colour plate3 0 {TargetColor}
/vis/geometry/set/colour plate4 0 {TargetColor}
/vis/geometry/set/colour plate5 0 {TargetColor}
/vis/geometry/set/colour plate6 0 {TargetColor}
/vis/geometry/set/colour plate7 0 {TargetColor}
/vis/geometry/set/colour plate8 0 {TargetColor}
/vis/geometry/set/colour plate9 0 {TargetColor}
/vis/geometry/set/colour plate10 0 {TargetColor}
/vis/geometry/set/colour scoring 0 {alpideColor}
/vis/geometry/set/colour quartz 0 {alpideColor}